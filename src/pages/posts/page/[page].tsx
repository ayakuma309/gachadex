import { GetStaticPaths } from "next";
import Head from "next/head";
import Link from "next/link";

import {
  getAllTags,
  getNumberOfPages,
  getPostsByPage,
} from "../../../lib/notionAPI";

import { BlogPageListProps } from "@/types/Type";

import Pagination from "@/components/Pagination/pagination";
import Tag from "@/components/Tag/Tag";
import AllPosts from "@/components/post/AllPosts";


export const getStaticPaths: GetStaticPaths = async () => {
  //ページネーションの中にある現在のページを返す
  const numberOfPage = await getNumberOfPages();

  //該当箇所を返す
  let params = [];
  for (let i = 1; i <= numberOfPage; i++) {
    params.push({ params: { page: i.toString() } });
  }

  return {
    paths: params,
    fallback: "blocking",
  };
};

export const getStaticProps =  async (context: { params: { page: string; }; }) => {
  //現在のページ
  const currentPage = context.params?.page;

  //そのページの個数を数値で取得
  const postsByPage = await getPostsByPage(
    parseInt(currentPage.toString(), 10)
  );

  //ページネーション設定
  const numberOfPage = await getNumberOfPages();

  const allTags = await getAllTags();

  return {
    props: {
      postsByPage,
      numberOfPage,
      allTags,
    },
    revalidate: 10,
  };
};
const BlogPageList = ({ postsByPage, numberOfPage, allTags }: BlogPageListProps) => {
  return (
    <div className="container h-full w-full mx-auto">
      <Head>
        <title>gachadex</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className="container w-full mt-16">
        <Link href={`/`}>
          <h1 className="text-5xl font-medium text-center mb-16">
            gachadex😄
          </h1>
        </Link>
        <Tag tags={allTags} />
        <section className="sm:grid grid-cols-3 w-5/6 gap-3 mx-auto">
          {postsByPage.map((post) => (
            <div key={post.id}>
              <AllPosts
                title={post.title}
                description={post.description}
                tags={post.tags}
                slug={post.slug}
                icon={post.icon}
              />
            </div>
          ))}
        </section>
        <Pagination numberOfPage={numberOfPage} tag={""} />
      </main>
    </div>
  );
};

export default BlogPageList;
