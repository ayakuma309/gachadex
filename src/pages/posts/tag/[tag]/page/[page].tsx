import { GetStaticPaths, GetStaticProps } from "next";
import Head from "next/head";
import {
  getAllTags,
  getNumberOfPagesByTag,
  getPostsByTagAndPage,
} from "../../../../../lib/notionAPI";
import AllPosts from "@/components/post/AllPosts";
import Pagination from "@/components/Pagination/pagination";
import Tag from "@/components/Tag/Tag";
import { BlogTagPageListProps } from "@/types/Type";
import Link from "next/link";

export const getStaticPaths: GetStaticPaths = async () => {
  const allTags = await getAllTags();
  let params: { params: { tag: string; page: string; }; }[] = [];

  await Promise.all(
    allTags.map((tag: string) => {
      return getNumberOfPagesByTag(tag).then((numberOfPagesByTag: number) => {
        for (let i = 1; i <= numberOfPagesByTag; i++) {
          params.push({ params: { tag: tag, page: i.toString() } });
        }
      });
    })
  );

  return {
    paths: params,
    fallback: "blocking",
  };
};

export const getStaticProps = async (context: { params: { page: string; tag: string; }; }) => {
  const currentPage: string = context.params?.page.toString();
  const currentTag: string = context.params?.tag.toString();

  //タグの最初の文字を大文字にする
  const upperCaseCurrentTag =
    currentTag.charAt(0).toUpperCase() + currentTag.slice(1);

  const posts = await getPostsByTagAndPage(
    upperCaseCurrentTag,
    parseInt(currentPage, 10)
  );

  //ページネーション設定
  const numberOfPagesByTag = await getNumberOfPagesByTag(upperCaseCurrentTag);

  const allTags = await getAllTags();

  return {
    props: {
      posts,
      numberOfPagesByTag,
      currentTag,
      allTags,
    },
    revalidate: 10,
  };
};

const BlogTagPageList = ({
  numberOfPagesByTag,
  posts,
  currentTag,
  allTags,
}: BlogTagPageListProps) => {
  return (
    <div className="container h-full w-full mx-auto">
      <Head>
        <title>gachadex</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className="container w-full mt-16">
        <Link href={`/`}>
          <h1 className="text-5xl font-medium text-center mb-16">
            gachadex😄
          </h1>
        </Link>
        <Tag tags={allTags} />
        <section className="sm:grid grid-cols-2 w-5/6 gap-3 mx-auto">
          {posts.map((post) => (
            <div key={post.id}>
              <AllPosts
                title={post.title}
                description={post.description}
                tags={post.tags}
                slug={post.slug}
                icon={post.icon}
              />
            </div>
          ))}
        </section>
        <Pagination numberOfPage={numberOfPagesByTag} tag={currentTag} />
      </main>
    </div>
  );
};

export default BlogTagPageList;
